{"version":3,"sources":["api/api.ts","components/PokemonCard/index.ts","components/PokemonCard/PokemonCard.tsx","api/pocemon.ts","components/pokemonList/index.ts","components/pokemonList/PokemonList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","POKEMONS","PokemonCard","props","pokemon","key","useState","card","setCard","preparedCard","a","name","fetch","then","response","ok","Error","status","statusText","json","info","console","log","useEffect","className","src","sprites","other","front_default","alt","type","types","PokemonList","pokemons","map","App","setPokemons","loadData","pokemonFromServer","results","prepPok","useMemo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAAaA,G,MAAW,6BACXC,EAAW,U,eCCTC,ECQ6B,SAACC,GAC3C,IAAQC,EAAiBD,EAAjBC,QAASC,EAAQF,EAARE,IACjB,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,4BAAAC,EAAA,sECCKC,EDAOP,EAAQO,KCClCC,MAAM,GAAD,OAAIZ,EAAJ,YAAgBC,EAAhB,YAA4BU,IACrCE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UDRC,OACbC,EADa,OAGnBZ,EAAQY,GACRC,QAAQC,IAAIf,GAJO,iCCCI,IAACI,IDDL,OAAH,qDAWlB,OAJAY,qBAAU,WACRd,MACC,IAGD,6BACGF,GACC,sBAAKiB,UAAU,OAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEC,IAAKlB,EAAKmB,QAAQC,MAAM,oBAAoBC,cAC5CC,IAAKtB,EAAKI,KACVa,UAAU,eAGd,wBACEM,KAAK,SADP,SAGGvB,EAAKwB,MAAM,GAAGD,KAAKnB,WAbnBN,IExBE2B,G,MCM6B,SAAC7B,GAC3C,IAAQ8B,EAAa9B,EAAb8B,SAER,OACE,mCACGA,EAASC,KAAI,SAAA9B,GAAO,OACnB,cAAC,EAAD,CAAgCA,QAASA,GAAvBA,EAAQO,aCRrBwB,EAAgB,WAC3B,MAAgC7B,mBAAoB,IAApD,mBAAO2B,EAAP,KAAiBG,EAAjB,KAIMC,EAAQ,uCAAG,4BAAA3B,EAAA,sEHNVE,MAAM,GAAD,OAAIZ,EAAJ,YAAgBC,EAAhB,MACTY,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UGAH,OACTmB,EADS,OAIfF,EAAYE,EAAkBC,SAE9BlB,QAAQC,IAAIW,GANG,2CAAH,qDAkBdV,qBAAU,WACRc,MACC,IAEH,IAAMG,EAAUC,mBAAQ,WACtB,OAAOR,IACN,CAACA,IAEJ,OACE,sBAAKT,UAAU,MAAf,UACE,yCADF,IAKE,oBAAIA,UAAU,WAAd,SACGS,EAASC,KAAI,SAAA9B,GAAO,OACnB,cAAC,EAAD,CAAgC6B,SAAUO,GAAxBpC,EAAQO,eCxCpC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d30c1afb.chunk.js","sourcesContent":["export const BASE_URL = 'https://pokeapi.co/api/v2';\nexport const POKEMONS = 'pokemon';\nexport const POKEMONS_PER_PAGE = 12;\nexport const TYPES = 'type';\n","import { PokemonCard } from './PokemonCard';\n\nexport default PokemonCard;\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { requestInfo } from '../../api/pocemon';\nimport './PokemonCard.scss';\n\ntype Props = {\n  key: string;\n  pokemon: Pokemon;\n};\n\nexport const PokemonCard: React.FC<Props> = (props) => {\n  const { pokemon, key } = props;\n  const [card, setCard] = useState<Card | null>(null);\n\n  const preparedCard = async () => {\n    const info = await requestInfo(pokemon.name);\n\n    setCard(info);\n    console.log(card);\n  };\n\n  useEffect(() => {\n    preparedCard();\n  }, []);\n\n  return (\n    <li key={key}>\n      {card && (\n        <div className=\"Card\">\n          <div className=\"Card_div\">\n            <img\n              src={card.sprites.other['official-artwork'].front_default}\n              alt={card.name}\n              className=\"Card_img\"\n            />\n          </div>\n          <button\n            type=\"button\"\n          >\n            {card.types[0].type.name}\n          </button>\n        </div>\n      )}\n    </li>\n  );\n};\n","import {\n  BASE_URL, POKEMONS, TYPES,\n} from './api';\n\nexport const requestPokemon = () => {\n  return fetch(`${BASE_URL}/${POKEMONS}/`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestInfo = (name: string) => {\n  return fetch(`${BASE_URL}/${POKEMONS}/${name}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestTypes = () => {\n  return fetch(`${BASE_URL}/${TYPES}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestCard = (url: string) => {\n  return fetch(`${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { PokemonList } from './PokemonList';\n\nexport default PokemonList;\n","import React from 'react';\nimport PokemonCard from '../PokemonCard';\nimport './PokemonList.scss';\n\ntype Props = {\n  pokemons: Pokemon[];\n};\n\nexport const PokemonList: React.FC<Props> = (props) => {\n  const { pokemons } = props;\n\n  return (\n    <>\n      {pokemons.map(pokemon => (\n        <PokemonCard key={pokemon.name} pokemon={pokemon} />\n      ))}\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport './App.scss';\nimport { requestPokemon } from './api/pocemon';\nimport PokemonList from './components/pokemonList';\n\nexport const App: React.FC = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  // const [isOpen, setOpen] = useState<boolean>(false);\n  // const [card, setCard] = useState<Card>([]);\n\n  const loadData = async () => {\n    const pokemonFromServer = await requestPokemon();\n    // const pokemonTypes = await requestTypes();\n\n    setPokemons(pokemonFromServer.results);\n\n    console.log(pokemons);\n  };\n\n  // const toggleOpen = async () => {\n  //   setOpen(!isOpen);\n\n  //   const pokemonC = await requestCard(pokemons[1].url);\n  //   // const url = await requestCard(pokemonC.game_indices[0].version.url);\n\n  //   console.log(pokemonC);\n  // };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const prepPok = useMemo(() => {\n    return pokemons;\n  }, [pokemons]);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Pokedex\n      </h1>\n      .\n      <ul className=\"App_list\">\n        {pokemons.map(pokemon => (\n          <PokemonList key={pokemon.name} pokemons={prepPok} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}