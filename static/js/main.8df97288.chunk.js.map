{"version":3,"sources":["api/api.ts","api/pocemon.ts","components/FindPokemon/index.ts","components/FindPokemon/FindPokemon.tsx","components/PkemonDetails/index.ts","components/PkemonDetails/PokemonDetails.tsx","components/PokemonCard/index.ts","components/PokemonCard/PokemonCard.tsx","components/PokemonList/index.ts","components/PokemonList/PokemonList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","POKEMONS","requestPokemon","offset","fetch","then","response","ok","Error","status","statusText","json","requestInfo","name","FindPocemon","PokemonDetails","props","details","setClose","console","log","className","onClick","type","src","sprites","other","front_default","alt","id","toString","padStart","types","map","stats","stat","text","includes","replace","toUpperCase","base_stat","weight","moves","length","PokemonCard","pokemon","useState","card","setCard","preparedCard","a","info","useEffect","item","PokemonList","onSelectName","pokemons","App","setPokemons","setOffset","setDetails","loadData","listFromServer","results","loadCard","prevOffset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8df97288.chunk.js","sourcesContent":["export const BASE_URL = 'https://pokeapi.co/api/v2';\nexport const POKEMONS = 'pokemon';\nexport const POKEMONS_PER_PAGE = 12;\nexport const TYPES = 'type';\n","import {\n  BASE_URL, POKEMONS, TYPES,\n} from './api';\n\nexport const requestPokemon = (offset: number) => {\n  return fetch(`${BASE_URL}/${POKEMONS}/?limit=${offset}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestInfo = (name: string | number | null) => {\n  return fetch(`${BASE_URL}/${POKEMONS}/${name}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestMore = (offset: number) => {\n  return fetch(`${BASE_URL}/${POKEMONS}/?limit=${offset}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestTypes = () => {\n  return fetch(`${BASE_URL}/${TYPES}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const requestCard = (url: string) => {\n  return fetch(`${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { FindPocemon } from './FindPokemon';\n\nexport default FindPocemon;\n","import React from 'react';\n// import Select, { MultiValue } from 'react-select';\n\n// interface Props {\n//   selectedFilters: MultiValue<ReactSelect<string>>;\n//   setSelectedFilters: (filters: MultiValue<ReactSelect<string>>) => void;\n//   className: string;\n// }\n\nexport const FindPocemon: React.FC = () => {\n  // const [options, setOptions] = useState<MultiValue<ReactSelect<string>>>([]);\n\n  return (\n    <>\n      {/* <Select options={optons} isMulti /> */}\n    </>\n  );\n};\n","import { PokemonDetails } from './PokemonDetails';\n\nexport default PokemonDetails;\n","import React from 'react';\nimport './PokemonDetails.scss';\n\ntype Props = {\n  setClose: (data: Card | null) => void;\n  details: Card | null;\n};\n\nexport const PokemonDetails: React.FC<Props> = (props) => {\n  const { details, setClose } = props;\n\n  // eslint-disable-next-line no-console\n  console.log(details);\n\n  const textTrasform = (text: string) => {\n    if (text.includes('special-')) {\n      return text.replace(/special-/, 'SP ');\n    }\n\n    if (text === 'hp') {\n      return text.toUpperCase();\n    }\n\n    return text;\n  };\n\n  return (\n    <>\n      {details && (\n        <button\n          className=\"Details\"\n          onClick={() => setClose(null)}\n          type=\"button\"\n          key={details?.id}\n        >\n          <div className=\"Details_container\">\n            <img\n              src={details.sprites.other['official-artwork'].front_default}\n              alt={details.name}\n            />\n          </div>\n          <div className=\"Details_bottom\">\n            <h2 className=\"Details_title\">\n              {`${details.name} #${details.id.toString().padStart(3, '0')}`}\n            </h2>\n            <ul className=\"Details_list\">\n              {details.types.map(type => (\n                <li\n                  className=\"Details_item\"\n                  key={type.type.name}\n                >\n                  Type\n                  <span className=\"Details_value\">\n                    {type.type.name}\n                  </span>\n                </li>\n              ))}\n              {details.stats.map(stat => (\n                <li key={stat.stat.name} className=\"Details_item\">\n                  {textTrasform(stat.stat.name)}\n                  <span className=\"Details_value\">\n                    {stat.base_stat}\n                  </span>\n                </li>\n              ))}\n              <li\n                className=\"Details_item\"\n                key=\"weight\"\n              >\n                Weight\n                <span className=\"Details_value\">\n                  {details.weight}\n                </span>\n              </li>\n              <li\n                className=\"Details_item\"\n                key=\"moves\"\n              >\n                Total moves\n                <span className=\"Details_value\">\n                  {details.moves.length}\n                </span>\n              </li>\n            </ul>\n          </div>\n        </button>\n      )}\n    </>\n  );\n};\n","import { PokemonCard } from './PokemonCard';\n\nexport default PokemonCard;\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { requestInfo } from '../../api/pocemon';\nimport './PokemonCard.scss';\n\ntype Props = {\n  // onSelectName: (name: string | '') => void;\n  pokemon: Pokemon;\n};\n\nexport const PokemonCard: React.FC<Props> = (props) => {\n  const { pokemon } = props;\n  const [card, setCard] = useState<Card | null>(null);\n\n  const preparedCard = async () => {\n    const info = await requestInfo(pokemon.name);\n\n    setCard(info);\n    // console.log(info);\n  };\n\n  useEffect(() => {\n    preparedCard();\n  }, []);\n\n  return (\n    <>\n      {card && (\n        <li key={card.id}>\n          <div className=\"Card\">\n            <div className=\"Card_div\">\n              <img\n                src={card.sprites.other['official-artwork'].front_default}\n                alt={card.name}\n                className=\"Card_img\"\n              />\n            </div>\n            <div className=\"Card_bottom\">\n              <h2 className=\"Card_title\">{card.name}</h2>\n              <div className=\"Card_buttons\">\n                {card.types.map(item => (\n                  <div\n                    key={item.type.name}\n                    className=\"Card_types\"\n                  >\n                    {item.type.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </li>\n      )}\n    </>\n  );\n};\n","import { PokemonList } from './PokemonList';\n\nexport default PokemonList;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PokemonCard from '../PokemonCard';\nimport './PokemonList.scss';\n\ntype Props = {\n  onSelectName: (name: string | '') => void;\n  pokemons: Pokemon[];\n};\n\nexport const PokemonList: React.FC<Props> = (props) => {\n  const { onSelectName, pokemons } = props;\n  // const [name, setName] = useState<string | ''>('');\n\n  // useEffect(() => {\n  //   console.log(name);\n  //   onSelectName(name);\n  // }, [name]);\n\n  return (\n    <ul className=\"App_list\">\n      {pokemons.map(pokemon => (\n        <button\n          className=\"btn\"\n          key={pokemon.name}\n          type=\"button\"\n          onClick={() => onSelectName(pokemon.name)}\n        >\n          <PokemonCard\n            key={pokemon.name}\n            pokemon={pokemon}\n          />\n        </button>\n      ))}\n    </ul>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { requestInfo, requestPokemon } from './api/pocemon';\nimport FindPocemon from './components/FindPokemon';\nimport { POKEMONS_PER_PAGE } from './api/api';\nimport PokemonDetails from './components/PkemonDetails';\nimport PokemonList from './components/PokemonList';\n\nexport const App: React.FC = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  const [offset, setOffset] = useState<number>(POKEMONS_PER_PAGE);\n  const [details, setDetails] = useState<Card | null>(null);\n\n  const loadData = async () => {\n    const listFromServer = await requestPokemon(offset);\n\n    setPokemons(listFromServer.results);\n  };\n\n  const loadCard = async (name: string) => {\n    const info = await requestInfo(name);\n\n    setDetails(info);\n  };\n\n  const getPokemon = (name: string) => {\n    loadCard(name);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [offset]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App_header\">\n        <h1 className=\"App_title\">\n          Pokedex\n        </h1>\n        <FindPocemon />\n      </div>\n      <div className=\"App_main\">\n        <PokemonList onSelectName={getPokemon} pokemons={pokemons} />\n        <button\n          type=\"button\"\n          className=\"App_more\"\n          onClick={() => setOffset(prevOffset => prevOffset + 12)}\n        >\n          Load More\n        </button>\n      </div>\n      <div className=\"App_sidebar\">\n        {details && (\n          <PokemonDetails\n            setClose={setDetails}\n            details={details}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}